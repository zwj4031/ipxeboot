#!ipxe
#设置各种文件路径默认支持10个,自己修改
set wim0 /mini.wim
set wim1 /mini.wim
set wim2 /win10newpe64(20201101).wim
set wim3 /win10newpe64(20201101).wim
set wim4 /win10newpe64(20201101).wim
set wim5 /win10newpe64(20201101).wim
set wim6 /win10newpe64(20201101).wim
set wim7 /win10newpe64(20201101).wim
set wim8 /win10newpe64(20201101).wim
set wim9 /win10newpe64(20201101).wim
set iso0 /grubfm_multiarch.iso
set iso1 /grubfm_multiarch.iso
set iso2 /grubfm_multiarch.iso
set iso3 /sb.iso
set iso4 /Win10_14393_PE_x86&x64.iso
set iso5 /Win10_14393_PE_x86&x64.iso
set iso6 /Win10_14393_PE_x86&x64.iso
set iso7 /Win10_14393_PE_x86&x64.iso
set iso8 /Win10_14393_PE_x86&x64.iso
set iso9 /Win10_14393_PE_x86&x64.iso
set img0 /mhdd.img
set img1 /mhdd.img
set img2 /maxdos9.img
set img3 /6086858.img
set img4 /mhdd.img
set img5 /mhdd.img
set img6 /mhdd.img
set img7 /mhdd.img
set img8 /mhdd.img
set img9 /mhdd.img
set vhd0 /grubfm.vhd

########################################
########################################
#以下可不用修改!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#修改本菜单的名称(默认是/wimisoimg.txt)
set scriptfile /ipxeboot.txt

#修改默认启动的文件类型(wim iso img vhd)
set ext-default wim

#修改默认启动的文件序号(0-9)
set bootfile-default 1

#设置iso启动默认方式
set pcbiosisobootmode memdiskiso
set efiisobootmode ${platform}sanbootiso

#设置img启动默认方式
set pcbiosimgbootmode memdiskimg
set efibootmode ${platform}sanbootimg

#设置vhd启动默认方式
set pcbiosvhdbootmode ${platform}sanbootvhd
set efivhdbootmode ${platform}sanbootvhd

#设置第一个菜单的超时时间
set ext-timeout 8000
#设置第二个选择文件界面菜单的超时时间
set bootfile-timeout 8000 
#可不用修改!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
########################################
########################################


#设置背景
#console --x 1024 --y 768
#console --picture http://boot.ipxe.org/texture.png --left 32 --right 32 --top 32 --bottom 48
#这句脚本是读取本地文件用，不用管
ifopen net0
#同上
ifstat
#这个我自己调试用的
set getfile /app/config/tinycore.ipxe

:boot
#找不到next-server变量就把dhcp-server的变量值给它
isset ${next-server} || set next-server ${dhcp-server}
#找不到proxydhcp/next-server变量就把proxydhcp/dhcp-server的变量值给它
isset ${proxydhcp/next-server} || set proxydhcp/next-server ${proxydhcp/dhcp-server}
#如果proxydhcp/next-server变量值存在，那么赋给booturl，不然就使用next-server的变量值
isset ${proxydhcp/next-server} && set booturl ${proxydhcp/next-server} || set booturl ${next-server}
#备用 prompt --key 0x02 --timeout 2000 Press Ctrl-B for the iPXE command line... && shell ||
#设置背景
console --x 1024 --y 768
console --picture http://${booturl}/app/config/ipxe.png --left 32 --right 32 --top 32 --bottom 48
#主菜单
:menu
 menu  iPXE's Boot Menu bootserver: http://${booturl}
   item --gap --             ------------------------   choose   -----------------------------
   item --key 0 wim            0.   Boot wimfile
   item --key 1 iso              1.   Boot isofile
   item --key 2 img             2.  Boot imgfile
   item --key 3 vhd             3.  Boot vhdfile
   item --key r reload         R. Reload iPXE Menu
   item --gap --             ---------------------Advanced options ------------------------
   item --key c config    Configure settings                                   -- c
   item --key p pxelinux  Load PXELinux menu                                   -- p
   item shell             Drop to iPXE shell
   item reboot            Reboot computer
   item poweroff          Poweroff computer
  item --key x exit       Exit iPXE and continue BIOS boot                     -- x  
  choose --timeout ${ext-timeout} --default ${ext-default} selected ||
  set ext ${selected} ||
 iseq ${selected} config && config ||
 iseq ${selected} pxelinux &&  goto pxelinux ||
 iseq ${selected} shell && shell ||
 iseq ${selected} reboot && reboot ||
 iseq ${selected} poweroff && poweroff ||
 iseq ${selected} exit && exit ||
 iseq ${selected} reload && chain http://${booturl}${scriptfile} ||
 iseq ${selected} grubfm && kernel http://${booturl}/grubfm.elf ||
 iseq ${selected} ${platform}boot && goto ${platform}boot ||
 

#选项启动文件类型后的子菜单(列表)
:boot
 menu  iPXE's Boot Menu ${ext}file bootserver: http://${booturl}
   item --gap --             ------------------------ choose  ${ext}file -----------------------------
   item --key 0 ${ext}0          0. Bootfile:${${ext}0}
   item --key 1 ${ext}1          1. Bootfile:${${ext}1}
   item --key 2 ${ext}2          2. Bootfile:${${ext}2}
   item --key 3 ${ext}3          3. Bootfile:${${ext}3}
   item --key 4 ${ext}4          4. Bootfile:${${ext}4}
   item --key 5 ${ext}5          5. Bootfile:${${ext}5}
   item --key 6 ${ext}6          6. Bootfile:${${ext}6}
   item --key 7 ${ext}7          7. Bootfile:${${ext}7}
   item --key 8 ${ext}8          8. Bootfile:${${ext}8}
   item --key 9 ${ext}9          9. Bootfile:${${ext}9}
   item --key m menu         M. Back to menu
  choose --timeout ${bootfile-timeout} --default ${ext}${bootfile-default} selected
  set sel  ${selected}
  set bootfile ${${sel}}
  iseq ${selected} menu && goto menu ||
  iseq ${ext} wim && goto wimboot ||
  iseq ${ext} iso && goto ${platform}iso ||
  iseq ${ext} img && goto ${platform}img ||
  iseq ${ext} vhd && goto ${platform}vhd ||
  goto ${ext} ||
  
#wim文件暂时的唯一启动方式 
:wimboot
#假如取文件失败就换个地址
kernel http://${booturl}/app/wimboot/wimboot || goto retryip
#前方高能！这个ghost.bat最终会出现在你所有pe的X:\windows\system32目录下，不要再问来问去怎么启动pxeautorun.txt了！取不到说明你没放，会继续启动 
#如果是我提供的pe，进入系统后会自动执行ghost.bat，ip.txt里面是填ip的
initrd http://${booturl}/netpe/ip.txt ip.txt || 
initrd http://${booturl}/netpe/client.cfg client.cfg || 
initrd http://${booturl}/netpe/p2p.7z p2p.7z || 
initrd http://${booturl}/netpe/peghost.7z peghost.7z || 
initrd http://${booturl}/netpe/startup.bat startup.bat || 
#在bios和efi不同环境取相应的文件
 iseq ${platform} pcbios && initrd http://${booturl}/app/wimboot/bootmgr  bootmgr ||
 iseq ${platform} efi    && initrd http://${booturl}/app/wimboot/bootmgfw.efi bootmgfw.efi ||
 iseq ${platform} pcbios && initrd http://${booturl}/app/wimboot/biosbcd  bcd ||
 iseq ${platform} efi    && initrd http://${booturl}/app/wimboot/BCD  bcd ||
 initrd http://${booturl}/app/wimboot/boot.sdi   boot.sdi ||
 iseq ${platform} pcbios && initrd http://${booturl}${bootfile} boot.wim ||
 iseq ${platform} efi && initrd -n boot.wim http://${booturl}${bootfile} ||
 boot || goto retry
 
 
#legacybios环境下的iso类型文件启动菜单
:pcbiosiso
menu  iPXE's Boot Menu isofile: ${bootfile}
   item --gap --             ------------------------     bootfile:${bootfile} -----------------------------
   item --key 0 ${platform}sanbootiso  0. Boot with sanboot 
   item --key 1 memdiskiso                 1. Boot with memdiskboot 
   item --key 2 pcbiosbootiso            2.  Boot with grub     
   item --key 3 menu                     M. back to menu         
choose --timeout 8000 --default ${pcbiosisobootmode} selected
iseq ${selected} ${platform}sanbootiso && set keep-san 1 && sanboot --drive 0xff http://${booturl}${bootfile} ||
iseq ${selected} ${platform}bootiso && goto ${platform}bootiso ||
iseq ${selected} menu && goto menu ||
goto ${selected} ||

#uefi环境下的iso类型文件启动菜单
:efibootiso
menu  iPXE's Boot Menu isofile: ${bootfile}
   item --gap --             ------------------------     bootfile:${bootfile} -----------------------------
   item --key 0 ${platform}sanbootiso 0. Boot with sanboot
   item --key 1 efibootiso               1. Boot with grub 
   item --key m  menu                  M.  back to menu
choose --timeout 8000 --default ${pcbiosisobootmode} selected
iseq ${selected} ${platform}sanbootiso && set keep-san 1 && sanboot --no-describe http://${booturl}${bootfile}  ||
iseq ${selected} ${platform}bootiso && goto ${platform}bootiso ||
iseq ${selected} menu && goto menu  ||
goto ${selected} ||

#用memdisk来启动iso(仅legacybios)
:memdiskiso
kernel ${boot-url}/app/${platform}/memdisk iso raw ||
initrd http://${booturl}${bootfile} ||
boot
#启动iso结束

#启动img开始
#legacybios环境下img类型文件的启动菜单
:pcbiosimg
menu  iPXE's Boot Menu isofile: ${bootfile}
   item --gap --             ------------------------     bootfile:${bootfile} -----------------------------
   item  --key 0 ${platform}sanbootimg    0. Boot with sanboot
   item  --key 1 memdiskimg               2. Boot with memdisk
   item  --key 2 ${platform}bootimgfdd   3. Boot with grub (FDD)
   item  --key 3 ${platform}bootimghdd    4. Boot with grub (HDD)
   item  --key m menu                    M. back to menu
choose --timeout 8000 --default ${pcbiosimgbootmode} selected
iseq ${selected} menu && goto menu  ||
iseq ${selected} ${platform}sanbootimg && set keep-san 1 && sanboot --drive 0x80 http://${booturl}${bootfile} && boot ||
iseq ${selected} ${platform}bootimgfdd && set diskmode fd && goto ${platform}bootimg ||
iseq ${selected} ${platform}bootimghdd && set diskmode hd && goto ${platform}bootimg ||
goto ${selected} ||


#uefi环境下的img类型文件启动菜单
:efibootimg
menu  iPXE's Boot Menu imgfile: ${bootfile}
   item --gap --             ------------------------     bootfile:${bootfile} -----------------------------
   item  --key 0 ${platform}sanbootimg    0.Boot with sanboot
   item  --key 0 ${platform}bootimg       2.Boot with grub
   item  --key m menu                     M.back to menu
choose --timeout 8000 --default ${efiimgbootmode} selected
iseq ${selected} menu && goto menu  ||
iseq ${selected} ${platform}bootimg && sanboot --no-describe http://${booturl}${bootfile} && boot ||
goto ${selected} ||


#用memdisk来启动img(仅legacybios)
:memdiskimg
initrd http://${booturl}${bootfile} ||
kernel ${boot-url}/app/${platform}/memdisk ||
boot
#启动img结束


#启动vhd开始
#legacybios环境下vhd类型文件的启动菜单
:pcbiosvhd
menu  iPXE's Boot Menu vhdfile: ${bootfile}
   item --gap --             ------------------------     bootfile:${bootfile} -----------------------------
   item  --key 0 ${platform}sanbootvhd    0. Boot with sanboot
   item  --key 1 ${platform}bootvhd       1. Boot with grub (ramos)
   item  --key m menu                     M. back to menu
choose --timeout 8000 --default ${pcbiosvhdbootmode} selected
iseq ${selected} menu && goto menu  ||
iseq ${selected} ${platform}sanbootvhd && set keep-san 1 && sanboot --drive 0x80 http://${booturl}${bootfile} && boot ||
iseq ${selected} ${platform}bootvhd && goto ${platform}bootvhd ||
goto ${selected} ||
#启动vhd结束

:efivhd
menu  iPXE's Boot Menu vhdfile: ${bootfile}
   item --gap --             ------------------------     bootfile:${bootfile} -----------------------------
   item  --key 0 ${platform}sanbootvhd    0. Boot with sanboot
   item  --key 1 ${platform}bootvhd       1. Boot with grub (ramos)
   item  --key m menu                     M. back to menu
choose --timeout 8000 --default ${efivhdbootmode} selected
iseq ${selected} menu && goto menu  ||
iseq ${selected} ${platform}sanbootvhd && set keep-san 1 && sanboot --no-describe http://${booturl}${bootfile} && boot ||
iseq ${selected} ${platform}bootvhd && goto ${platform}bootvhd ||
goto ${selected} ||
#启动vhd结束


#下面是辅助菜单
:retry
console
echo set Filename 
read getfile 
set menu-default gitcloud
goto start

#如果当前booturl变量值是proxydhcp/next-server，那么就换成next-server，反之亦然，我瞎写的，不知道语法有没有问题
:retryip
issq ${booturl} ${proxydhcp/next-server} && set booturl ${next-server} && goto start ||
set booturl ${proxydhcp/next-server} && goto start



#下面都是些进入命令行模式，重启，退出，关机之类的，还有些备用项目，不用解释
:shell
  echo Type 'exit' to get the back to the menu
  shell
  goto start

:failed
  echo Booting failed, dropping to shell
  goto shell

:reboot
  reboot

:exit
  exit

:config
  config
  goto start

:pcbiosbootiso
iseq ${platform} pcbios && && kernel http://${booturl}/app/${platform}/grub.exe ||
iseq ${platform} pcbios && initrd http://${booturl}${bootfile} ||
iseq ${platform} pcbios && initrd http://${booturl}/app/${platform}/512 ||
iseq ${platform} pcbios && imgargs grub.exe --config-file="map (rd)+1 (0xff);map --hook;chainloader (255);boot" ||
boot

:efibootiso
iseq ${platform} efi && kernel http://${booturl}/app/wimboot/wimboot gui ||
iseq ${platform} efi && initrd -n bootmgfw.efi http://${booturl}/app/${platform}/BOOTX64.EFI ||
iseq ${platform} efi && initrd -n menu.lst http://${booturl}/app/${platform}/menu.lst ||
iseq ${platform} efi && initrd -n boot.iso http://${booturl}${bootfile} ||
boot

:pcbiosbootimg
iseq ${platform} pcbios && && kernel http://${booturl}/app/${platform}/grub.exe ||
iseq ${platform} pcbios && initrd http://${booturl}${bootfile} ||
iseq ${platform} pcbios && initrd http://${booturl}/app/${platform}/512 ||
iseq ${platform} pcbios && imgargs grub.exe --config-file="map (rd)+1 (${diskmode}0);map --hook; root (${diskmode}0);chainloader (${diskmode}0)+1;boot" ||
boot

:efibootimg
iseq ${platform} efi && kernel http://${booturl}/app/wimboot/wimboot gui ||
iseq ${platform} efi && initrd -n bootmgfw.efi http://${booturl}/app/${platform}/BOOTX64.EFI ||
iseq ${platform} efi && initrd -n menu.lst http://${booturl}/app/${platform}/menu.lst ||
iseq ${platform} efi && initrd -n boot.iso http://${booturl}${bootfile} ||
boot

:pcbiosbootvhd
iseq ${platform} pcbios && && kernel http://${booturl}/app/${platform}/grub.exe ||
iseq ${platform} pcbios && initrd http://${booturl}${bootfile} ||
iseq ${platform} pcbios && initrd http://${booturl}/app/${platform}/512 ||
iseq ${platform} pcbios && imgargs grub.exe --config-file="map (rd)+1 (hd0);map --hook;chainloader (hd0);boot" ||
boot

:efibootvhd
iseq ${platform} efi && kernel http://${booturl}/app/wimboot/wimboot gui ||
iseq ${platform} efi && initrd -n bootmgfw.efi http://${booturl}/app/${platform}/grubfmx64.efi ||
iseq ${platform} efi && initrd -n menu.lst http://${booturl}/app/${platform}/menu.lst ||
iseq ${platform} efi && initrd -n boot.iso http://${booturl}${bootfile} ||
boot



